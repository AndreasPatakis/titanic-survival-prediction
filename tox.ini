# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[tox]
envlist = test_package, typechecks, lint
skipsdist = True

[testenv]
install_command = pip install {opts} {packages} 


[testenv:test_package]
deps = 
        -rrequirements/test_requirements.txt

setenv =
        PYTHONPATH=.
        PYTHONHASHSEED=0

commands = 
        python classification_model/train_pipeline.py
        pytest \
        -s \
        -vv \
        {posargs:tests/}


[testenv:train]
envdir = 
        {toxworkdir}/test_package

deps = 
        {[testenv:test_package]deps}

setenv = 
        {[testenv:test_package]setenv}

commands = python classification_model/train_pipeline.py


[testenv:core]
envdir = 
        {toxworkdir}/test_package

deps = 
        {[testenv:test_package]deps}

setenv = 
        {[testenv:test_package]setenv}

commands = python classification_model/config/core.py


[testenv:data_manager]
envdir = 
        {toxworkdir}/test_package

deps = 
        {[testenv:test_package]deps}

setenv = 
        {[testenv:test_package]setenv}

commands = python classification_model/preprocessing/data_manager.py


[testenv:predict]
envdir = 
        {toxworkdir}/test_package

deps = 
        {[testenv:test_package]deps}

setenv = 
        {[testenv:test_package]setenv}

commands = python classification_model/predict.py